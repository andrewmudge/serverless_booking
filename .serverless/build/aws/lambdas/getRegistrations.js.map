{
  "version": 3,
  "sources": ["../../../../aws/lambdas/getRegistrations.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from 'aws-lambda';\r\nimport { DynamoDBClient, QueryCommand } from '@aws-sdk/client-dynamodb';\r\n\r\nconst client = new DynamoDBClient({});\r\n\r\nexport const handler: APIGatewayProxyHandler = async (event) => {\r\n  try {\r\n    const userId = event.queryStringParameters?.userId;\r\n    if (!userId) {\r\n      return {\r\n        statusCode: 400,\r\n        body: JSON.stringify({ error: 'Missing userId' }),\r\n      };\r\n    }\r\n\r\n    // Use the GSI to query by userId\r\n    const command = new QueryCommand({\r\n      TableName: 'Registrations',\r\n      IndexName: 'userId-index', // <-- Make sure this matches your GSI name!\r\n      KeyConditionExpression: 'userId = :uid',\r\n      ExpressionAttributeValues: {\r\n        ':uid': { S: userId },\r\n      },\r\n      ProjectionExpression: 'eventId',\r\n    });\r\n\r\n    const result = await client.send(command);\r\n\r\n    const eventIds = (result.Items || []).map(item => item.eventId.S);\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify({ eventIds }),\r\n    };\r\n  } catch (err: any) {\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ error: err.message }),\r\n    };\r\n  }\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,6BAA6C;AAE7C,IAAM,SAAS,IAAI,sCAAe,CAAC,CAAC;AAE7B,IAAM,UAAkC,OAAO,UAAU;AAC9D,MAAI;AACF,UAAM,SAAS,MAAM,uBAAuB;AAC5C,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,iBAAiB,CAAC;AAAA,MAClD;AAAA,IACF;AAGA,UAAM,UAAU,IAAI,oCAAa;AAAA,MAC/B,WAAW;AAAA,MACX,WAAW;AAAA;AAAA,MACX,wBAAwB;AAAA,MACxB,2BAA2B;AAAA,QACzB,QAAQ,EAAE,GAAG,OAAO;AAAA,MACtB;AAAA,MACA,sBAAsB;AAAA,IACxB,CAAC;AAED,UAAM,SAAS,MAAM,OAAO,KAAK,OAAO;AAExC,UAAM,YAAY,OAAO,SAAS,CAAC,GAAG,IAAI,UAAQ,KAAK,QAAQ,CAAC;AAEhE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,CAAC;AAAA,IACnC;AAAA,EACF,SAAS,KAAU;AACjB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,IAAI,QAAQ,CAAC;AAAA,IAC7C;AAAA,EACF;AACF;",
  "names": []
}
