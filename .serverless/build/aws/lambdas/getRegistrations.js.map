{
  "version": 3,
  "sources": ["../../../../aws/lambdas/getRegistrations.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from 'aws-lambda';\r\nimport { DynamoDBClient, QueryCommand } from '@aws-sdk/client-dynamodb';\r\n\r\nconst client = new DynamoDBClient({});\r\n\r\nexport const handler: APIGatewayProxyHandler = async (event) => {\r\n  try {\r\n    const userId = event.queryStringParameters?.userId;\r\n    if (!userId) {\r\n      return {\r\n        statusCode: 400,\r\n        headers: { 'Access-Control-Allow-Origin': '*' },\r\n        body: JSON.stringify({ error: 'Missing userId' }),\r\n      };\r\n    }\r\n\r\n    const command = new QueryCommand({\r\n      TableName: process.env.BOOKINGS_TABLE, // Use env variable\r\n      IndexName: 'userId-index', // Must match your GSI name\r\n      KeyConditionExpression: 'userId = :uid',\r\n      ExpressionAttributeValues: {\r\n        ':uid': { S: userId },\r\n      },\r\n      ProjectionExpression: 'eventId',\r\n    });\r\n\r\n    const result = await client.send(command);\r\n\r\n    const eventIds = (result.Items || []).map((item) => item.eventId.S);\r\n\r\n    return {\r\n      statusCode: 200,\r\n      headers: { 'Access-Control-Allow-Origin': '*' },\r\n      body: JSON.stringify({ eventIds }),\r\n    };\r\n  } catch (err: unknown) {\r\n    const message =\r\n      err instanceof Error ? err.message : 'Unknown error occurred';\r\n    return {\r\n      statusCode: 500,\r\n      headers: { 'Access-Control-Allow-Origin': '*' },\r\n      body: JSON.stringify({ error: message }),\r\n    };\r\n  }\r\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,6BAA6C;AAE7C,IAAM,SAAS,IAAI,sCAAe,CAAC,CAAC;AAE7B,IAAM,UAAkC,OAAO,UAAU;AAC9D,MAAI;AACF,UAAM,SAAS,MAAM,uBAAuB;AAC5C,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,SAAS,EAAE,+BAA+B,IAAI;AAAA,QAC9C,MAAM,KAAK,UAAU,EAAE,OAAO,iBAAiB,CAAC;AAAA,MAClD;AAAA,IACF;AAEA,UAAM,UAAU,IAAI,oCAAa;AAAA,MAC/B,WAAW,QAAQ,IAAI;AAAA;AAAA,MACvB,WAAW;AAAA;AAAA,MACX,wBAAwB;AAAA,MACxB,2BAA2B;AAAA,QACzB,QAAQ,EAAE,GAAG,OAAO;AAAA,MACtB;AAAA,MACA,sBAAsB;AAAA,IACxB,CAAC;AAED,UAAM,SAAS,MAAM,OAAO,KAAK,OAAO;AAExC,UAAM,YAAY,OAAO,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC;AAElE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,+BAA+B,IAAI;AAAA,MAC9C,MAAM,KAAK,UAAU,EAAE,SAAS,CAAC;AAAA,IACnC;AAAA,EACF,SAAS,KAAc;AACrB,UAAM,UACJ,eAAe,QAAQ,IAAI,UAAU;AACvC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,+BAA+B,IAAI;AAAA,MAC9C,MAAM,KAAK,UAAU,EAAE,OAAO,QAAQ,CAAC;AAAA,IACzC;AAAA,EACF;AACF;",
  "names": []
}
